name: Build and Push Java Application

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-jar.outputs.cache-key }}
      cache-hit: ${{ steps.cache-jar.outputs.cache-hit }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Create env file
        run: |
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> docker.env
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> docker.env
          echo "SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }}" >> docker.env
          echo "SPRING_DATASOURCE_URL_LOCAL=${{ secrets.SPRING_DATASOURCE_URL_LOCAL }}" >> docker.env
          echo "SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}" >> docker.env
          echo "SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}" >> docker.env
          echo "SPRING_DATA_REDIS_HOST=${{ secrets.SPRING_DATA_REDIS_HOST }}" >> docker.env
          echo "SPRING_DATA_REDIS_PORT=${{ secrets.SPRING_DATA_REDIS_PORT }}" >> docker.env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> docker.env

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build -x test
          gradle-version: 8.1.1

      - name: Cache JAR
        id: cache-jar
        uses: actions/cache@v3
        with:
          path: build/libs/*.jar
          key: ${{ runner.os }}-jar-${{ github.sha }}

      - name: Log built JAR files
        run: |
            ls -lah build/libs/

  docker-build:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME}}
          password: ${{ secrets.DOCKERHUB_PWD}}

      - name: Restore JAR from Cache
        uses: actions/cache@v3
        with:
          path: build/libs/
          key: ${{ needs.build.outputs.cache-key }}

      - name: Verify JAR File
        run: |
          ls -lah build/libs/

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: your-username/your-repo:latest
          build-args: JAR_FILE=travel-0.0.1-SNAPSHOT.jar
          file: Dockerfile
          context: .